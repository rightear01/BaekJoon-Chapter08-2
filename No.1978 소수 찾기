#define _CRT_SECURE_NO_WARNINGS
#define TRUE 1
#define FALSE 0
#include <stdio.h>
#include <stdlib.h>
/*
접근법
주어진 N개 중에서 소수가 몇 개인지 찾아서 출력하는
프로그램을 작성하시오.
첫 줄에 수의 개수 N이 주어진다.
N은 100이하이다. 다음으로 N개의 수가 주어지는데
수는 1,000 이하의 자연수이다.
소수 : 양의 약수가 1과 자신뿐인 2개로 구성된 자연수입니다.
point라는 지표를 두어 반복문을 종료하고 나왔을 때에 소수인지 아닌지를 구분 할 수 있게
설계하였다.
*/
int main() {
	int testCase, ctr = 0, point = TRUE;
	scanf("%d", &testCase);
	int* numArray = (int*)malloc(sizeof(int) * testCase);
	for (int i = 0; i < testCase; i++) {
		scanf("%d", &numArray[i]);
		if (numArray[i] == 1) continue; 
		// 1은 소수의 범위에 해당되지 않기 때문에 pass
		for (int j = 2; j < numArray[i]; j++) {
			if (numArray[i] % j == 0) { point = FALSE; break; } 
			// 반복문은 1과 자기 자신을 포함하지 않는다.
			// 만약 나누어 진다면 소수가 아니기 때문에 지표를 FALSE로 수정하고 반복문을 탈출한다.
		}
		if (point) { ++ctr; }
		// 반복문을 나왔을 때에 지표가 참이면 소수이기에 카운트.
		point = TRUE;
		// 지표를 재사용하기 위하여 TRUE로 재설정한다.
	}
	printf("%d", ctr);
    free(numArray);
	return 0;
}
